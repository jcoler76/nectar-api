"""
Template20 GraphQL Schema
Generated from MongoDB Template20 Intelligence
Version: v1.0-ai-optimized
Generated: 2025-07-13T15:31:20.218Z

This schema provides AI-friendly access to Template20 business data
with intelligent procedure recommendations and relationship context.
"""

directive @auth(requires: Role = USER) on OBJECT | FIELD_DEFINITION
directive @deprecated(reason: String = "No longer supported") on FIELD_DEFINITION | ENUM_VALUE
directive @businessEntity(entity: String!) on OBJECT
directive @confidence(score: Float!) on FIELD_DEFINITION

enum Role {
  USER
  ADMIN
  DEVELOPER
}

"""Custom scalar types for business data"""
scalar DateTime
scalar Decimal
scalar JSON

"""Confidence score for AI recommendations (0.0 to 1.0)"""
scalar Confidence



"""Pagination arguments"""
input PaginationInput {
  first: Int
  after: String
  last: Int
  before: String
}

"""Ordering input"""
input OrderBy {
  field: String!
  direction: SortDirection!
}

enum SortDirection {
  ASC
  DESC
}

"""Page info for connections"""
type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

"""Filter input for customer"""
input CustomerFilter {
  # Common business filters
  createdAfter: DateTime
  createdBefore: DateTime
  isActive: Boolean
}

"""Filter input for contract"""
input ContractFilter {
  # Common business filters
  createdAfter: DateTime
  createdBefore: DateTime
  isActive: Boolean
}

"""Filter input for invoice"""
input InvoiceFilter {
  # Common business filters
  createdAfter: DateTime
  createdBefore: DateTime
  isActive: Boolean
}

"""Filter input for payment"""
input PaymentFilter {
  # Common business filters
  createdAfter: DateTime
  createdBefore: DateTime
  isActive: Boolean
}

"""Filter input for opportunity"""
input OpportunityFilter {
  # Common business filters
  createdAfter: DateTime
  createdBefore: DateTime
  isActive: Boolean
}

"""Root Query type with AI-optimized resolvers"""
type Query {
  # Schema introspection
  _schema: SchemaInfo!

  # Customer and contact management
  customer(id: ID!): Customer
  customers(filter: CustomerFilter, pagination: PaginationInput, orderBy: [OrderBy!]): CustomerConnection!

  # Sales contracts and opportunities
  contract(id: ID!): Contract
  contracts(filter: ContractFilter, pagination: PaginationInput, orderBy: [OrderBy!]): ContractConnection!

  # Billing and invoicing
  invoice(id: ID!): Invoice
  invoices(filter: InvoiceFilter, pagination: PaginationInput, orderBy: [OrderBy!]): InvoiceConnection!

  # Payment processing and tracking
  payment(id: ID!): Payment
  payments(filter: PaymentFilter, pagination: PaginationInput, orderBy: [OrderBy!]): PaymentConnection!

  # Sales pipeline and opportunity tracking
  opportunity(id: ID!): Opportunity
  opportunitys(filter: OpportunityFilter, pagination: PaginationInput, orderBy: [OrderBy!]): OpportunityConnection!

  # Stored procedure queries
  executeStoredProcedure(procedureName: String!, parameters: JSON): JSON!
  recommendedProcedures(entityType: String!, minConfidence: Float = 0.7): [ProcedureRecommendation!]!

  # Relationship queries
  entityRelationships(entityType: String!): [EntityRelationship!]!
  tableRelationships(tableName: String!): [TableRelationship!]!
}

"""Mutations for data modification"""
type Mutation {
  # Schema updates
  refreshIntelligence: RefreshResult!
  
  # Procedure execution
  executeProcedure(input: ProcedureExecutionInput!): ProcedureResult!
}

input ProcedureExecutionInput {
  procedureName: String!
  parameters: JSON
  timeout: Int = 30000
}

type ProcedureResult {
  success: Boolean!
  data: JSON
  error: String
  executionTime: Int!
  recordCount: Int
}

type RefreshResult {
  success: Boolean!
  entitiesUpdated: Int!
  proceduresAnalyzed: Int!
  relationshipsDiscovered: Int!
}

"""Subscriptions for real-time updates"""
type Subscription {
  # Schema changes
  intelligenceUpdated: IntelligenceUpdate!
  
  # Procedure recommendations
  procedureRecommendationUpdated(entityType: String!): ProcedureRecommendation!
}

type IntelligenceUpdate {
  type: UpdateType!
  entityType: String
  timestamp: DateTime!
  details: JSON
}

enum UpdateType {
  ENTITY_ADDED
  ENTITY_UPDATED
  PROCEDURES_REFRESHED
  RELATIONSHIPS_UPDATED
}